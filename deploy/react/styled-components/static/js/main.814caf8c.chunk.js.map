{"version":3,"sources":["components/styles.js","components/Header.js","components/Box.js","components/Content.js","App.js","serviceWorker.js","index.js"],"names":["sizes","desktop","tablet","mobile","media","Object","keys","reduce","acc","label","css","_templateObject","apply","arguments","HeaderWrapper","styled","header","Header_templateObject","props","theme","primary","_templateObject2","_templateObject3","_templateObject4","Header","react_default","a","createElement","this","children","React","Component","Button","button","Box_templateObject","NoButton","Box_templateObject2","BoxDiv","div","Box_templateObject3","secondary","Box","className","as","Title","h1","Content_templateObject","Input","input","Content_templateObject2","tertiary","Thing","Content_templateObject3","Link","Content_templateObject4","Icon","svg","_templateObject5","Label","span","_templateObject6","Content","_props","Header_Header","Box_Box","defaultValue","type","inputColor","href","viewBox","d","myTheme","App","styled_components_browser_esm","components_Content","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.814caf8c.chunk.js","sourcesContent":["import { css } from 'styled-components';\r\n\r\nexport const sizes = {\r\n  desktop: 992,\r\n  tablet: 768,\r\n  mobile: 576\r\n};\r\n\r\nexport const media = Object.keys(sizes).reduce((acc, label) => {\r\n  acc[label] = (...args) => css`\r\n    @media (max-width: ${sizes[label] / 16}em) {\r\n      ${css(...args)}\r\n    }\r\n  `;\r\n\r\n  return acc;\r\n}, {});\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { media } from './styles';\r\n\r\n// ${media.desktop`background-color: '${props => props.theme.primary}';`}\r\n// ${media.tablet`background-color: 'darkred';`}\r\n// ${media.mobile`background-color: 'darkgreen';`}\r\n\r\nconst HeaderWrapper = styled.header`\r\n  width: 100%;\r\n  height: 40px;\r\n  padding: 10px;\r\n  color: #dadada;\r\n  font-size: 30px;\r\n  background: ${props => props.theme.primary || 'darkblue'};\r\n\r\n  ${media.desktop`background: ${props => props.theme.primary || 'darkcyan'};`}\r\n  ${media.tablet`background: darkred;`}\r\n  ${media.mobile`background: orangered;`}\r\n`;\r\n\r\nexport default class Header extends React.Component {\r\n  render() {\r\n    return <HeaderWrapper>{this.props.children}</HeaderWrapper>;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  background: ${props => (props.primary ? 'palevioletred' : 'white')};\r\n  color: ${props => (props.primary ? 'white' : 'palevioletred')};\r\n\r\n  font-size: 1em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid palevioletred;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst NoButton = styled(Button)`\r\n  color: white;\r\n  background-color: darkcyan;\r\n`;\r\n\r\nconst BoxDiv = styled.div`\r\n    width: 300px;\r\n    border: 2px solid ${props => props.theme.secondary || 'darkblue'}\r\n    border-radius: 12px;\r\n    padding: 1\r\n\r\n    & > .content{\r\n        padding: 1em;\r\n    }\r\n    & > .footer{\r\n        text-align: center;\r\n        padding: 1em;\r\n    }\r\n`;\r\n\r\nexport default class Box extends React.Component {\r\n  render() {\r\n    return (\r\n      <BoxDiv>\r\n        <div className=\"content\">{this.props.children}</div>\r\n        <div className=\"footer\">\r\n          {this.props.button ? (\r\n            <Button primary>{this.props.button}</Button>\r\n          ) : (\r\n            <NoButton as=\"span\">no button</NoButton>\r\n          )}\r\n        </div>\r\n      </BoxDiv>\r\n    );\r\n  }\r\n}\r\n\r\nBox.propTypes = {\r\n  button: propTypes.string\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Header from './Header';\r\nimport Box from './Box';\r\n\r\nconst Title = styled.h1`\r\n  font-size: 1.5em;\r\n  color: palevioletred;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 0.5em;\r\n  margin: 0.5em;\r\n  color: ${props => props.theme.secondary || 'palevioletred'};\r\n  background: ${props => props.theme.tertiary || 'papayawhip'};\r\n  border: 1px solid ${props => props.theme.secondary || 'palevioletred'};\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst Thing = styled.button`\r\n  color: blue;\r\n  ::before {\r\n    content: 'ðŸš€';\r\n  }\r\n  :hover {\r\n    color: red;\r\n  }\r\n`;\r\n\r\nconst Link = styled.a`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 5px 10px;\r\n  background: papayawhip;\r\n  color: palevioletred;\r\n`;\r\n\r\nconst Icon = styled.svg`\r\n  flex: none;\r\n  transition: fill 0.25s;\r\n  width: 48px;\r\n  height: 48px;\r\n\r\n  ${Link}:hover & {\r\n    fill: rebeccapurple;\r\n  }\r\n`;\r\n\r\nconst Label = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  line-height: 1.2;\r\n\r\n  &::before {\r\n    content: 'â—€';\r\n    margin: 0 10px;\r\n  }\r\n`;\r\n\r\nexport const Content = _props => {\r\n  return (\r\n    <div>\r\n      <Header>Some app header</Header>\r\n      <Title>Hey, that's the title</Title>\r\n      <Box>Box 1</Box>\r\n      <Box button=\"pouet\">Box 2</Box>\r\n      <Box>Box 3</Box>\r\n      <hr />\r\n      <Input defaultValue=\"@probablyup\" type=\"text\" />\r\n      <Input defaultValue=\"@geelen\" type=\"text\" inputColor=\"rebeccapurple\" />\r\n      <Thing>Hello world!</Thing>\r\n      <Link href=\"#\">\r\n        <Icon viewBox=\"0 0 20 20\">\r\n          <path d=\"M10 15h8c1 0 2-1 2-2V3c0-1-1-2-2-2H2C1 1 0 2 0 3v10c0 1 1 2 2 2h4v4l4-4zM5 7h2v2H5V7zm4 0h2v2H9V7zm4 0h2v2h-2V7z\" />\r\n        </Icon>\r\n        <Label>Hovering my parent changes my style!</Label>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React, { Component } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport Content from './components/Content';\n\n\nconst myTheme = {\n  primary: 'darkcyan',\n  secondary: 'mediumseagreen'\n};\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <ThemeProvider theme={myTheme}>\n          <Content></Content>\n        </ThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}